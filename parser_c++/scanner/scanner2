%class-name Scanner


DIGIT		[0-9]
DIGIT1		[1-9]
CHAR		[a-zA-Z]
ALNUM		[_0-9a-zA-Z-]
CISLO       [0-9]+([\.][0-9]+)?
NAZOV       [a-zA-Z]+[_0-9a-zA-Z-]*


%%


{CISLO}			{
                        column_num += length();
						return Parser::NUMBER;
					}

{NAZOV}		{
                        column_num += length();
						return Parser::NAME;
					}

[Rr][mp](coor)?"("{NAZOV}\,({CISLO}|{NAZOV})\,({CISLO}|{NAZOV})\,({CISLO}|{NAZOV})\,({CISLO}|{NAZOV})")"		{
                    column_num += length();
					return Parser::RAMP;
				}

[Ss][pm](inv)*(\[(([0-9]+)|{NAZOV})\])*"("{NAZOV}\,({CISLO}|{NAZOV})\,({CISLO}|{NAZOV})\,({CISLO}|{NAZOV})\,({CISLO}|{NAZOV})\)	{
                    column_num += length();
					return Parser::SIGM;
				}

[Hh][mp]"("{NAZOV}\,({CISLO}|{NAZOV})\,({CISLO}|{NAZOV})\)	{
                    column_num += length();
					return Parser::STEP;
				}

^(VARS:)		{
                    column_num += length();
					return Parser::VAR_LINE;
				}
^(PARAMS:)		{
                    column_num += length();
					return Parser::PARAM_LINE;
				}
^(CONSTS:)      {
                    column_num += length();
					return Parser::CONST_LINE;
                }
^(EQ:)			{
                    column_num += length();
					return Parser::EQ_LINE;
				}
^(THRES:)		{
                    column_num += length();
					return Parser::THRES_LINE;
				}
^(INIT:)        {
                    column_num += length();
					return Parser::INIT_LINE;
                }
^(BA:).+        {
                    column_num += length();
                    return Parser::BA_LINE;
                }

^#.*                  /* ignored */
\/\/.*                /* ignored */
\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\/              /* ignored */


" "+			{ column_num += length(); } /* ignored */
\t+			    { column_num += length(); } /* ignored */

\n			return '\n';

\,          |
\;          |
\:          |
\-			|
\*			|
\(			|
\)			|
\[			|
\]			|
\=			|
\+			    {
                    column_num += length();
                    return (int) (matched()[0]);
                }
